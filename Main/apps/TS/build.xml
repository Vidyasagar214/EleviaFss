<?xml version="1.0" encoding="utf-8"?>
<project name="TS" default=".help">
    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>
        
        The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

            <target name="-before-page"/>
            <target name="-after-page"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->

    <target name="-after-build">
        <x-echo message="Environment ${build.environment}"/>
        <x-echo message="Copying settings and version to production build, please wait..."/>
        <if>
            <equals arg1="${build.environment}" arg2="production"/>
            <then>
                <copy todir="${build.dir}" overwrite="true">
                    <fileset dir="${workspace.dir}/apps/TS">
						<include name="settings.js"/>
                        <include name="settings.new.js"/>
                        <include name="version.js"/>
                    </fileset>

                </copy>
            </then>
        </if>
        <if>
            <equals arg1="${build.environment}" arg2="testing"/>
            <then>
                <copy todir="${build.dir}" overwrite="true">
                    <fileset dir="${workspace.dir}/apps/TS">
                        <include name="settings.js"/>
                        <include name="settings.new.js"/>
                        <include name="version.js"/>
                    </fileset>

                </copy>
            </then>
        </if>
        <if>
            <equals arg1="${build.environment}" arg2="development"/>
            <then>
                <copy todir="${build.dir}" overwrite="true">
                    <fileset dir="${workspace.dir}/apps/TS">
                        <include name="settings.js"/>
                        <include name="settings.new.js"/>
                        <include name="version.js"/>
                    </fileset>

                </copy>
            </then>
        </if>
        <!--<if>-->
            <!--<equals arg1="${build.environment}" arg2="native"/>-->
            <!--<then>-->
                <!--<copy todir="${build.dir}" overwrite="true">-->
                    <!--<fileset dir="${workspace.dir}/apps/TS/cordova/platforms/android/app/src/main/assets/www/resources">-->
                        <!--<include name="settings.js"/>-->
                        <!--<include name="version.js"/>-->
                    <!--</fileset>-->

                <!--</copy>-->
            <!--</then>-->
        <!--</if>-->
    </target>


<!--    <import file="${basedir}/build-analytics.xml"/>-->
<!--    <target name="-before-build">-->
<!--        <x-ant-call unless="skip.analytics">-->
<!--            <target name="-compile-analytics"/>-->
<!--        </x-ant-call>-->
<!--    </target>-->
</project>
